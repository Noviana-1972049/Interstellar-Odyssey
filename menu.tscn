[gd_scene load_steps=17 format=2]

[ext_resource path="res://menu.gd" type="Script" id=1]
[ext_resource path="res://tema hero.wav" type="AudioStream" id=2]
[ext_resource path="res://startmenu.theme" type="Theme" id=3]
[ext_resource path="res://Assets/GameOver.png" type="Texture" id=4]
[ext_resource path="res://Assets/planet3.png" type="Texture" id=6]
[ext_resource path="res://Assets/planet2.png" type="Texture" id=7]
[ext_resource path="res://Assets/planet6.png" type="Texture" id=8]
[ext_resource path="res://Assets/planet8.png" type="Texture" id=9]
[ext_resource path="res://Assets/planet7.png" type="Texture" id=10]
[ext_resource path="res://Assets/planet5.png" type="Texture" id=11]
[ext_resource path="res://Assets/planet4.png" type="Texture" id=12]

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;

uniform vec4 bg_color: hint_color;

float rand(vec2 st) {
    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);
}

void fragment() {
	float size = 100.0;
	float prob = 0.9;
	vec2 pos = floor(1.0 / size * FRAGCOORD.xy);
	float color = 0.0;
	float starValue = rand(pos);

	if (starValue > prob)
	{
		vec2 center = size * pos + vec2(size, size) * 0.5;
		float t = 0.9 + 0.2 * sin(TIME * 8.0 + (starValue - prob) / (1.0 - prob) * 45.0);
		color = 1.0 - distance(FRAGCOORD.xy, center) / (0.5 * size);
		color = color * t / (abs(FRAGCOORD.y - center.y)) * t / (abs(FRAGCOORD.x - center.x));
	}
	else if (rand(SCREEN_UV.xy / 20.0) > 0.996)
	{
		float r = rand(SCREEN_UV.xy);
		color = r * (0.85 * sin(TIME * (r * 5.0) + 720.0 * r) + 0.95);
	}
	COLOR = vec4(vec3(color),1.0) + bg_color;
}"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 4 )
shader_param/bg_color = null

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

uniform vec4 bg_color: hint_color;

float rand(vec2 st) {
    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);
}

void fragment() {
	float size = 100.0;
	float prob = 0.9;
	vec2 pos = floor(1.0 / size * FRAGCOORD.xy);
	float color = 0.0;
	float starValue = rand(pos);

	if (starValue > prob)
	{
		vec2 center = size * pos + vec2(size, size) * 0.5;
		float t = 0.9 + 0.2 * sin(TIME * 8.0 + (starValue - prob) / (1.0 - prob) * 45.0);
		color = 1.0 - distance(FRAGCOORD.xy, center) / (0.5 * size);
		color = color * t / (abs(FRAGCOORD.y - center.y)) * t / (abs(FRAGCOORD.x - center.x));
	}
	else if (rand(SCREEN_UV.xy / 20.0) > 0.996)
	{
		float r = rand(SCREEN_UV.xy);
		color = r * (0.85 * sin(TIME * (r * 5.0) + 720.0 * r) + 0.95);
	}
	COLOR = vec4(vec3(color),1.0) + bg_color;
}"

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 5 )
shader_param/bg_color = null

[sub_resource type="AnimatedTexture" id=8]

[node name="menu" type="Node2D"]
script = ExtResource( 1 )

[node name="music" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 2 )
volume_db = -9.613

[node name="Control" type="Control" parent="."]
margin_right = 485.0
margin_bottom = 199.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ParallaxBackground" type="ParallaxBackground" parent="Control"]

[node name="ParallaxLayer" type="ParallaxLayer" parent="Control/ParallaxBackground"]
material = SubResource( 6 )
motion_scale = Vector2( 0, 0 )

[node name="Sprite" type="Sprite" parent="Control/ParallaxBackground/ParallaxLayer"]
material = SubResource( 7 )
position = Vector2( -286, -532 )
scale = Vector2( 1282, 1793 )
texture = SubResource( 8 )
centered = false

[node name="Sprite6" type="Sprite" parent="Control"]
position = Vector2( 92, 226 )
scale = Vector2( 0.0585937, 0.0585937 )
texture = ExtResource( 11 )

[node name="Sprite" type="Sprite" parent="Control"]
position = Vector2( 243, 182 )
scale = Vector2( 0.207031, 0.207031 )
texture = ExtResource( 4 )

[node name="Sprite5" type="Sprite" parent="Control"]
position = Vector2( 127, 510 )
scale = Vector2( 0.0742187, 0.0742187 )
texture = ExtResource( 12 )

[node name="Sprite4" type="Sprite" parent="Control"]
position = Vector2( 386, 615 )
scale = Vector2( 0.0751953, 0.0751953 )
texture = ExtResource( 6 )

[node name="restartButton" type="Button" parent="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 143.0
margin_top = 367.0
margin_right = -135.0
margin_bottom = 221.0
theme = ExtResource( 3 )
text = "Try Again"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="quitButton" type="Button" parent="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 142.0
margin_top = 449.0
margin_right = -136.0
margin_bottom = 304.0
theme = ExtResource( 3 )
text = "Quit"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Sprite3" type="Sprite" parent="Control"]
position = Vector2( 74, 704 )
scale = Vector2( 0.0546875, 0.0546875 )
texture = ExtResource( 7 )

[node name="Sprite7" type="Sprite" parent="Control"]
position = Vector2( 153, 8.00005 )
scale = Vector2( 0.078125, 0.078125 )
texture = ExtResource( 8 )

[node name="Sprite8" type="Sprite" parent="Control"]
position = Vector2( 338, 81 )
scale = Vector2( 0.0478515, 0.0478515 )
texture = ExtResource( 10 )

[node name="Sprite9" type="Sprite" parent="Control"]
position = Vector2( 374, 307 )
scale = Vector2( 0.0751953, 0.0751953 )
texture = ExtResource( 9 )

[node name="Sprite10" type="Sprite" parent="Control"]
position = Vector2( 272, 827 )
scale = Vector2( 0.0888672, 0.0888672 )
texture = ExtResource( 8 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="highScore" type="Label" parent="CanvasLayer"]
anchor_left = 0.5
anchor_top = 0.398
anchor_right = 0.5
anchor_bottom = 0.398
margin_left = -35.0
margin_top = -6.89203
margin_right = 39.0
margin_bottom = 7.10797
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="CanvasLayer"]
margin_left = 194.0
margin_top = 309.0
margin_right = 294.0
margin_bottom = 323.0
text = "Your Highscore:"
__meta__ = {
"_edit_use_anchors_": false
}

[connection signal="pressed" from="Control/restartButton" to="." method="_on_restartButton_pressed"]
[connection signal="pressed" from="Control/quitButton" to="." method="_on_quitButton_pressed"]
